/// <reference types="react" />
import { FIELD_TYPES } from "../types/fieldTypes";
import SolaceComponentProps from "./SolaceComponentProps";
import { SolaceTextFieldChangeEvent } from "./form/SolaceTextField";
export interface SolaceSearchAndFilterProps extends SolaceComponentProps {
    /**
     * Unique identifier ... if `id` is not specified, `name` value will be used in order to make `label` and `helperText` accessible for screen readers
     */
    id?: string;
    /**
     * Name attribute to assign to the `input` element
     */
    name: string;
    /**
     * the label content to display on the screen
     */
    label?: string | JSX.Element;
    /**
     * Content to display as supportive/explanitory text
     */
    helperText?: string | JSX.Element;
    /**
     * The value of the `input` element, required for controlled component
     */
    value?: string;
    /**
     * Short hint displayed in the `input` before user enters a value
     */
    placeholder?: string;
    /**
     * Custom Width of the component.
     */
    width?: string;
    /**
     * Boolean flag to disable the `input`
     */
    disabled?: boolean;
    /**
     * Indicates whether this is a "search" or "filter" field (appropriate icon will show as the adornment)
     */
    type?: FIELD_TYPES;
    /**
     * Boolean flag to mark the field in error state
     */
    hasErrors?: boolean;
    /**
     * Callback function to trigger whenever the value of the `input` is changed
     */
    onChange: (event: SolaceTextFieldChangeEvent) => void;
    /**
     * Callback function to notify the callee when the clear (x) button is clicked (in case
     * the callee wishes to perform any additional operations other than clearing the search/filter text)
     */
    onClearAll?: () => void;
}
declare function SolaceSearchAndFilter({ id, name, label, helperText, value, placeholder, width, disabled, type, hasErrors, onChange, onClearAll }: SolaceSearchAndFilterProps): JSX.Element;
export default SolaceSearchAndFilter;
