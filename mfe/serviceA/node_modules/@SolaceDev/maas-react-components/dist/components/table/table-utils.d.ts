/// <reference types="react" />
import { SolaceMenuItemProps } from "../SolaceMenuItem";
import { ContentControlProps } from "./components/ContentControlMenu";
export interface TableColumn {
    field: string;
    headerName: string;
    class?: string;
    width?: number | string;
    sortable: boolean;
    sortDirection?: SORT_DIRECTION;
    disableHiding: boolean;
    resizable?: boolean;
    hasNoCell?: boolean;
    isHidden?: boolean;
    tooltip?: boolean;
    isNumerical?: boolean;
}
export interface TableRow {
    id: string;
    [key: string]: any;
}
export interface TableActionMenuItem extends SolaceMenuItemProps {
    callback: (row: TableRow) => void;
}
export interface CustomContentDefinition {
    type: string;
    label: string;
}
export declare enum SELECTION_TYPE {
    SINGLE = "single",
    MULTI = "multi",
    NONE = "none"
}
export declare enum SORT_DIRECTION {
    ASC = "asc",
    DCS = "desc"
}
export declare const StyledTableRow: import("@emotion/styled").StyledComponent<import("@mui/system").MUIStyledCommonProps<import("@mui/material").Theme>, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLTableRowElement>, HTMLTableRowElement>, {}>;
export declare const StyledTableData: import("@emotion/styled").StyledComponent<import("@mui/system").MUIStyledCommonProps<import("@mui/material").Theme>, import("react").DetailedHTMLProps<import("react").TdHTMLAttributes<HTMLTableDataCellElement>, HTMLTableDataCellElement>, {}>;
export declare const StyledTableNumberData: import("@emotion/styled").StyledComponent<import("@mui/system").MUIStyledCommonProps<import("@mui/material").Theme> & import("react").ClassAttributes<HTMLTableDataCellElement> & import("react").TdHTMLAttributes<HTMLTableDataCellElement> & {
    children?: import("react").ReactNode;
}, {}, {}>;
export declare const StyledExpandedTableRow: import("@emotion/styled").StyledComponent<import("@mui/system").MUIStyledCommonProps<import("@mui/material").Theme>, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLTableRowElement>, HTMLTableRowElement>, {}>;
export declare const StyledExpandedTableData: import("@emotion/styled").StyledComponent<import("@mui/system").MUIStyledCommonProps<import("@mui/material").Theme>, import("react").DetailedHTMLProps<import("react").TdHTMLAttributes<HTMLTableDataCellElement>, HTMLTableDataCellElement>, {}>;
export declare const StyledTableHeader: import("@emotion/styled").StyledComponent<import("@mui/system").MUIStyledCommonProps<import("@mui/material").Theme> & {
    width?: string | undefined;
}, import("react").DetailedHTMLProps<import("react").ThHTMLAttributes<HTMLTableHeaderCellElement>, HTMLTableHeaderCellElement>, {}>;
export declare const addEmptyHeaderCell: () => React.ReactNode;
export declare const addEmptyRowCell: (row: TableRow) => React.ReactNode;
export declare const addActionMenuIcon: (row: TableRow, actionMenuItems: TableActionMenuItem[]) => React.ReactNode;
export declare const addColumnHidingControl: ({ columns, displayedColumnsChangedCallback, customContentDefinitions, displayedCustomContent, customContentDisplayChangeCallback, customMenuActions }: ContentControlProps) => React.ReactNode;
