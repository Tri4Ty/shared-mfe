import SolaceComponentProps from "./SolaceComponentProps";
import React from "react";
export interface SolaceAccordionProps extends SolaceComponentProps {
    /**
     * unique identifier
     */
    id?: string;
    /**
     * 	The summary section of the Accordion component.
     */
    summary: string | JSX.Element;
    /**
     * 	The details section of the Accordion component, which can be expanded or closed.
     */
    details: string | JSX.Element;
    /**
     * A colored vertical bar displayed inside the left border to indicate the variant
     */
    indicatorVariant?: "info" | "error" | "warn" | "success" | "secondary";
    /**
     * If true, the Accordion component is disabled.
     */
    disabled?: boolean;
    /**
     *	If true, expands the Accordion component, otherwise collapse it.
     */
    expanded: boolean;
    /**
     * Callback function that fires when the expand/collapse state of the Accordion component is changed
     * event: the event source of the callback function. Note: this is a generic event not a change event
     * expanded: the expanded state of the Accordion component
     */
    onChange: (event: React.SyntheticEvent, expanded: boolean) => void;
    /**
     * If true, the Accordion component is has hover effect.
     */
    hover?: boolean;
    /**
     * Background color of the accordion
     */
    backgroundColor?: string;
    /**
     * If `false`, rounded corners are enabled. The default is `true`.
     */
    square?: boolean;
    /**
     * if `false`, the component will be borderless.  The default is `true`.
     */
    border?: boolean;
    /**
     * border color variants: error, info, warn and success, default to `palette.ux.secondary.w10`
     */
    borderColor?: "info" | "error" | "warn" | "success";
    /**
     * If `true`, the Accordion details component will not have padding. The default is `false`.
     * If enabled, the content will not left align with the header title anymore.
     */
    disablePadding?: boolean;
}
declare const SolaceAccordion: ({ id, summary, details, indicatorVariant, disabled, expanded, hover, onChange, dataQa, dataTags, backgroundColor, square, border, borderColor, disablePadding }: SolaceAccordionProps) => JSX.Element;
export default SolaceAccordion;
