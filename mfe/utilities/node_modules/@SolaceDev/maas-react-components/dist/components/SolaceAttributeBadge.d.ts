/// <reference types="react" />
import { BASE_SIZE_TYPES } from "../types/sizing";
import { BASE_FONT_PX_SIZE_TYPES } from "../resources/typography";
import { CHIP_COLORS } from "../types/solaceChip";
import SolaceComponentProps from "./SolaceComponentProps";
export interface SolaceAttributeProps extends SolaceComponentProps {
    /**
     * 	The content of the component.
     */
    label?: string | JSX.Element;
    /**
     * 	The variant to use.
     */
    variant?: "filled" | "outlined";
    /**
     * If true, the component is disabled.
     */
    disabled?: boolean;
    /**
     * If the content exceeds the maxWidth (in px), ellipsis will be shown within the chip.
     */
    maxWidth?: string | number;
    /**
     * Sets the border color of the component
     */
    borderColor?: CHIP_COLORS;
    /**
     * Sets the border radius of the component
     */
    borderRadius?: keyof BASE_SIZE_TYPES;
    /**
     * Flag to change the border to dashed for the outlined chip variant
     */
    dashedBorder?: boolean;
    /**
     * Sets the fill color of the chip
     */
    fillColor?: CHIP_COLORS;
    /**
     * Flag to set the label font weight to bold
     */
    boldLabel?: boolean;
    /**
     * Sets the text color of the label
     */
    labelColor?: CHIP_COLORS;
    /**
     * Sets the vertical size of the chip
     */
    height?: keyof BASE_SIZE_TYPES;
    /**
     * Font size
     */
    size?: keyof BASE_FONT_PX_SIZE_TYPES;
    /**
     * Flag for controlling the size of the chip component
     */
    compressed?: boolean;
    /**
     * If true, the chip will appear clickable, and will raise when pressed
     */
    clickable?: boolean;
    /**
     * if the callback function is set, the chip will show the delete button
     */
    onDelete?: (id: string | number) => void;
}
export default function SolaceAttribute({ label, variant, disabled, maxWidth, dashedBorder, borderColor, labelColor, borderRadius, fillColor, boldLabel, height, dataQa, size, compressed, clickable, onDelete }: SolaceAttributeProps): JSX.Element;
