import React from "react";
import SolaceComponentProps from "./SolaceComponentProps";
export interface SolaceMenuItemProps extends SolaceComponentProps {
    id?: string;
    /**
     * Name attribute to show as menu item label for default menuItems,for custom menu items JSX.Element type is passed.
     */
    name: string | JSX.Element;
    /**
     * Content to display as supportive/explanitory text
     */
    subText?: string;
    /**
     * Content to display as supportive/explanitory text
     */
    supplementalText?: string;
    /**
     * Adds an Icon to left handside of the menu item label for Supporting visuals and helping differentiate between menu options
     */
    icon?: JSX.Element | HTMLElement;
    /**
     * Adds a secondary action (ex. more info icon button) to the right end of menu item
     */
    secondaryAction?: JSX.Element | HTMLElement;
    /**
     * The callback function runs when the user clicks on a menu item
     */
    onMenuItemClick?: (event: React.MouseEvent<HTMLElement, MouseEvent>) => void;
    /**
     * callback function on menu close action
     */
    onMenuClose?: (event: React.MouseEvent<HTMLElement, MouseEvent>) => void;
    /**
     * Adds a divider to the bottom of menuItem
     */
    divider?: boolean;
    /**
     * Boolean flag to disable the menuItem
     */
    disabled?: boolean;
    /**
     * Optional attribute to group Menu items and show categoryHeading
     */
    categoryHeading?: string;
    /**
     * Optional flag to close the menu on menuItemClick, the default is set to true.
     */
    closeOnSelect?: boolean;
    /**
     * Optional flag for subMenu items
     */
    subMenuItems?: SolaceMenuItemProps[];
    /**
     * Optional flag for the height of menu items
     */
    itemHeight?: number;
    /**
     * Optional flag for identify the selected menu item
     */
    selected?: boolean;
}
declare const SolaceMenuItem: ({ id, name, subText, supplementalText, icon, secondaryAction, onMenuItemClick, onMenuClose, divider, disabled, subMenuItems, closeOnSelect, itemHeight, selected, dataQa, dataTags }: SolaceMenuItemProps) => JSX.Element;
export default SolaceMenuItem;
