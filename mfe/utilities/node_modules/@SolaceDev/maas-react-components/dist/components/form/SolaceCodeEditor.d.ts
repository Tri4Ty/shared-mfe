/// <reference types="react" />
import { Controlled as CodeMirror } from "react-codemirror2";
import SolaceComponentProps from "../SolaceComponentProps";
import "codemirror/mode/xml/xml";
import "codemirror/mode/javascript/javascript";
import "codemirror/mode/protobuf/protobuf";
import "codemirror/theme/material.css";
import "codemirror/lib/codemirror.css";
import "codemirror/addon/lint/json-lint";
import "codemirror/keymap/sublime";
import "codemirror/addon/display/fullscreen";
import "codemirror/addon/display/fullscreen.css";
export interface SolaceCodeEditorProps extends SolaceComponentProps {
    /**
     * Unique identifier for the button
     */
    id?: string;
    /**
     * The value to initialize the content with
     */
    value?: string;
    /**
     * Renders the button disabled
     */
    readOnly?: boolean;
    /**
     * render SolaceCodeEditor in fullscreen state
     */
    fullScreen?: boolean;
    /**
     * The formatting style to render the content as
     */
    mode?: "json" | "xml" | "protobuf";
    /**
     * Content to display as supportive/explanitory text
     */
    helperText?: string | JSX.Element;
    /**
     * Boolean flag to mark the SolaceCodeEditor in error state
     */
    hasErrors?: boolean;
    /**
     * Boolean flag to mark the SolaceCodeEditor in warning state
     */
    hasWarnings?: boolean;
    /**
     * whether to allow CodeEditor to be expandable
     */
    expandable?: boolean;
    /**
     * Callback function to trigger whenever the value of the `input` is changed
     */
    onChange?: (editor: CodeMirror, data: any, value: string) => void;
}
declare function SolaceCodeEditor({ id, mode, value, readOnly, fullScreen, expandable, helperText, hasErrors, hasWarnings, onChange }: SolaceCodeEditorProps): JSX.Element;
export default SolaceCodeEditor;
