/// <reference types="react" />
import SolaceComponentProps from "../SolaceComponentProps";
export interface SolaceRadioChangeEvent {
    name: string;
    value: boolean;
}
export interface SolaceRadioProps extends SolaceComponentProps {
    /**
     * Unique identifier ... if `id` is not specified, `name` value will be used in order to make `label` accessible for screen readers
     */
    id?: string;
    /**
     * Name attribute to assign to the `radio` element
     */
    name: string;
    /**
     * Value assign to the `radio` element
     */
    value?: string;
    /**
     * the label content to display on the screen
     */
    label?: string | JSX.Element;
    /**
     * The text to display as the tooltip hint
     */
    title?: string;
    /**
     * Content to display as supportive/explanitory text
     */
    subText?: string | JSX.Element;
    /**
     * allow subText to be displayed at 55% black (default to 80%)
     */
    lightSubText?: boolean;
    /**
     * Boolean flag to check or uncheck the `radio`
     */
    checked?: boolean;
    /**
     * Boolean flag used to display an indicator of whether or not this `radio` is mandatory
     */
    required?: boolean;
    /**
     * Boolean flag to disable the `radio`
     */
    disabled?: boolean;
    /**
     * Display the label with a larger font
     */
    largeLabel?: boolean;
    /**
     * Callback function to trigger whenever the value of the `radio` is changed
     */
    onChange?: (event: SolaceRadioChangeEvent) => void;
    /**
     * Boolean flag to set the radio to readOnly
     */
    readOnly?: boolean;
}
declare function SolaceRadio({ id, name, label, value, title, subText, lightSubText, checked, required, disabled, largeLabel, onChange, dataQa, dataTags, readOnly }: SolaceRadioProps): JSX.Element;
export default SolaceRadio;
