/// <reference types="react" />
export declare enum PANEL_POSITION {
    LEFT = "left",
    RIGHT = "right"
}
export interface SolaceSidePanelLayoutProps {
    /**
     * The content you want to show/hide in the side panel
     */
    sidePanelContent?: JSX.Element;
    /**
     * Flag signifying if the side panel is expanded or collapsed
     */
    showSidePanel: boolean;
    /**
     * The desired width of the side panel
     */
    sidePanelWidth?: number;
    /**
     * property to control which side of the main content the side panel is rendered on
     */
    sidePanelPosition?: PANEL_POSITION;
    /**
     * Optional flag to have side panel (drawer) float over main content. default is set to false (shifting the main content)
     */
    overlayContent?: boolean;
    /**
     * The main content that is render on the screen regardless if the side panel is
     * expanded or collapsed. As the side panel expands, the main content area shall be
     * responsive and shink to accomodate it's size
     */
    children: JSX.Element;
}
declare function SolaceSidePanelLayout({ children, sidePanelContent, showSidePanel, sidePanelWidth, sidePanelPosition, overlayContent }: SolaceSidePanelLayoutProps): JSX.Element;
export default SolaceSidePanelLayout;
