/// <reference types="react" />
export interface SolacePaginationProps {
    /**
     * Flag signifying if the side panel is expanded or collapsed
     */
    activePage?: number;
    /**
     * The desired width of the side panel
     */
    pageSize?: number;
    /**
     * property to control which side of the main content the side panel is rendered on
     */
    totalResults: number;
    /**
     * The string template to use for communicating pagination details. Use the following placeholders
     * to substitute values if and where needed
     *  - firstItemIndex: index of the first item being displayed
     *  - lastItemIndex: index of the last item being displayed
     *  - totalResults: total number of items that are paginated
     *  - pageSize: the number of items currently rendered
     *  - activePage: the currently selected page number
     *
     *  Ex: "Showing ${firstItemIndex}-${lastItemIndex} of ${totalResults} results" would result in:
     *  -> Showing 1-10 of 156 results
     */
    displayText?: string;
    /**
     * Callback function to notify which page was clicked/selected by the end user
     */
    onPageSelection?: (selectedPage: number) => void;
    /**
     * loading state (renders a half transparent overlay on top of the pagination component, currently is designed to use along with table component's loading state)
     */
    loading?: boolean;
}
declare function SolacePagination({ activePage, pageSize, displayText, totalResults, loading, onPageSelection }: SolacePaginationProps): JSX.Element;
export default SolacePagination;
