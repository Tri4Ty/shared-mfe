/// <reference types="react" />
import SolaceComponentProps from "./SolaceComponentProps";
export interface SolaceTooltipProps extends SolaceComponentProps {
    /**
     * Unique identifier ... if `id` is not specified, a randomly generated value will be used in order to make it accessible for screen readers
     */
    id?: string;
    /**
     * Tooltip title
     */
    title?: string | JSX.Element;
    /**
     * Different type of tooltip, default to `text`
     */
    variant?: "text" | "overflow" | "html";
    /**
     * Tooltip referenced element.
     */
    children: string | JSX.Element;
    /**
     * Tooltip placement, default to `bottom`
     */
    placement?: "bottom-end" | "bottom-start" | "bottom" | "left-end" | "left-start" | "left" | "right-end" | "right-start" | "right" | "top-end" | "top-start" | "top";
    /**
     * Tooltip maximum width, default to small
     */
    maxWidth?: "small" | "medium" | "full";
    /**
     * Disable listener to show tooltip when referenced element is focused, default to false
     */
    disableFocusListener?: boolean;
    /**
     * Disable listener to show tooltip when referenced element is hovered, default to false
     */
    disableHoverListener?: boolean;
    /**
     * The number of milliseconds to wait before showing the tooltip. Default is 500ms
     */
    enterDelay?: number;
    /**
     * The number of milliseconds to wait before showing the tooltip when one was already recently opened. Default is 0ms
     */
    enterNextDelay?: number;
    /**
     * The number of milliseconds to wait before hiding the tooltip. Default is 0ms
     */
    leaveDelay?: number;
    /**
     * Controlled open state for tooltip. If `true`, the component is shown
     */
    open?: boolean;
    /**
     * Callback fired when the component requests to be open. Used in conjunction with `open` and `onClose`
     */
    onOpen?: (event: React.SyntheticEvent) => void;
    /**
     * Callback fired when the component requests to be closed. Used in conjunction with `open` and `onOpen`
     */
    onClose?: (event: Event | React.SyntheticEvent<Element, Event>) => void;
}
declare function SolaceTooltip({ id, title, variant, children, placement, maxWidth, disableFocusListener, disableHoverListener, enterDelay, enterNextDelay, leaveDelay, open, onOpen, onClose, dataQa, dataTags }: SolaceTooltipProps): JSX.Element;
export default SolaceTooltip;
