/// <reference types="react" />
import SolaceComponentProps from "./SolaceComponentProps";
export interface TreeNode {
    children?: TreeNode[];
    component: JSX.Element;
}
export declare const createHeightCalculation: (node: TreeNode | undefined, rowHeight: number, connectorOffset: number, index: number) => number;
interface SolaceTreeProps extends SolaceComponentProps {
    components: TreeNode[];
    rowHeight: number;
    connectorOffset: number;
    connectorWidth: number;
    leftOffset: number;
    connectorBorderRadius: number;
    connectorStroke: number;
    connectorColor?: string;
}
/**
 *  SolaceDataTree Component
 *  Displays a series of components arranged to look like a tree of any height
 *
 *  The "connector" is the part that connects the children to the parent component.
 *
 *  The components passed into this component should all have a uniform height
 *
 * @interface SolaceTree
 * @param props
 * @returns JSX.Element
 *
 */
declare function SolaceTree(props: SolaceTreeProps): JSX.Element;
declare namespace SolaceTree {
    var defaultProps: {
        rowHeight: number;
        connectorOffset: number;
        connectorWidth: number;
        leftOffset: number;
        connectorBorderRadius: number;
        connectorStroke: number;
    };
}
export default SolaceTree;
