/// <reference types="react" />
import SolaceComponentProps from "../SolaceComponentProps";
export interface SolaceToggleChangeEvent {
    name: string;
    value: boolean;
}
export interface SolaceToggleProps extends SolaceComponentProps {
    /**
     * Unique identifier ... if `id` is not specified, `name` value will be used in order to make `label` accessible for screen readers
     */
    id?: string;
    /**
     * Name attribute to assign to the `toggle` element
     */
    name: string;
    /**
     * the label content to display on the screen
     */
    label?: string | JSX.Element;
    /**
     * The text to display as the tooltip hint
     */
    title?: string;
    /**
     * Content to display as supportive/explanitory text
     */
    helperText?: string | JSX.Element;
    /**
     * Boolean flag to show the state of toggle element
     */
    stateText?: boolean;
    /**
     * Boolean flag to mark the `input` in error state
     */
    hasErrors?: boolean;
    /**
     * Boolean flag to check or uncheck the `toggle`
     */
    isOn?: boolean;
    /**
     * Boolean flag used to display an indicator of whether or not this `toggle` is mandatory
     */
    required?: boolean;
    /**
     * Boolean flag to disable the `toggle`
     */
    disabled?: boolean;
    /**
     * Display the label with a larger font
     */
    largeLabel?: boolean;
    /**
     * Callback function to trigger whenever the value of the `toggle` is changed
     */
    onChange?: (event: SolaceToggleChangeEvent) => void;
}
declare function SolaceToggle({ id, name, label, title, helperText, hasErrors, isOn, required, disabled, largeLabel, stateText, onChange, dataQa, dataTags }: SolaceToggleProps): JSX.Element;
export default SolaceToggle;
